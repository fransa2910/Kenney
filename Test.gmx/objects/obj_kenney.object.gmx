<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_kenney</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
grav = 0.55;
hsp = 0;
vsp = 0;
jumpSpeed = 8.5;
moveSpeed = 6;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Get input
rightKey = keyboard_check(vk_right);
dKey = keyboard_check(ord('D'));
restart = keyboard_check(ord('R'));

leftKey = -keyboard_check(vk_left);
aKey = -keyboard_check(ord('A'));

jumpKey = keyboard_check_pressed(vk_space);


//React to input
move = rightKey + leftKey;
hsp = move * moveSpeed;
if(restart) {
    game_restart();
}

if(vsp &lt; 10) {
//Gravity maximum control
    vsp += grav;    
}

if (place_meeting(x, y+1, obj_solid)) {
//if the player has a solid object below, it will either
//stay in place (vertically) or jump upwards.
    vsp = jumpKey * - jumpSpeed;
   
}

//Horizontal collision
if(place_meeting(x+hsp, y, obj_solid)) {
    while(!place_meeting(x+sign(hsp), y, obj_solid)) {
        x += sign(hsp);
    }    
    hsp = 0;
}
x += hsp;
//Vertical collision
if(place_meeting(x, y+vsp, obj_solid)) {
    while(!place_meeting(x, y+sign(vsp), obj_solid)) {
        y += sign(vsp);
    }    
    vsp = 0;
}
y += vsp;

if(hsp &lt; 0) {
    image_speed = 10;
    image_xscale = -1;
} 
else if(hsp &gt; 0) {
    image_speed = 10;
    image_xscale = 1;
} else {
    image_speed = 0;
    image_index = 0;
}




/* Old code
if(keyboard_check(ord('A')) or keyboard_check(vk_left)) { 
    hspeed -= 1.5;
} 
if(keyboard_check(ord('D')) or keyboard_check(vk_right)) {
    hspeed += 1.5;
}


if (speed &gt; 6) speed = 6;

x = min(x, room_width);
x = max(x, 0);

image_angle = direction + 90;*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>72,0</point>
    <point>72,96</point>
    <point>0,96</point>
  </PhysicsShapePoints>
</object>
